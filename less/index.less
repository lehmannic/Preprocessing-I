// Is this working?
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	// border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
// ol, ul {
// 	list-style: none;
// }
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

html, body {
	height: 100%;
}


// import fonts
@import url('https://fonts.googleapis.com/css2?family=Baloo+Paaji+2&family=Roboto&display=swap');

// variables
@headerFont: 'Roboto', sans-serif;
@mainFont: 'Baloo Paaji 2', cursive; 

@mainColor: green; 
@altColor: gold; 


// Mixins
.testBorder{
	border: 1px solid red; 
}
.flexColumnAround{
	display: flex;
	flex-direction: column;
	justify-content: space-around;
}
.flexColumnBetween{
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}



/* Set every element's box-sizing to border-box */
* {
	box-sizing: border-box;
	// .testBorder();
}

html{
	display: flex; 
	justify-content: center;
	font-family: @mainFont;
}

h1,h2,h3,h4,h5{
	font-family: @headerFont;
}

h2{
	font-size: 3rem;
}

h3{
	font-size: 2rem; 
}

h4 {
	font-size: 1.5rem; 
}

body {
	max-width: 1140px;
}

header{
	padding: 4%; 
	background-color: @mainColor;

	.flexColumnAround();

	h1 { 
		font-size: 4rem; 
		@media (max-width: 500px){
			font-size: 3rem; 
		}
	} //
	

	.navContainer{
	
		display: flex;
		justify-content: flex-end;

		.navLinks{
			width: 50%;
			display: flex;
			justify-content: space-around;

			@media(max-width:500px){
				width: 75%; 
			}

			a {
				color: black;
				text-decoration: none;
				&:hover{
					color: @altColor;
				} // closes psuedo hover on a
			} // closes a tags in navLinks

		} // closes navLinks in navContainer

	} // closes navContainer

	.aboutMeContainer{

		display: flex; 
		justify-content: space-around;
		align-items: center;

		img{
			width: 50%; 
		} // closes img in aboutMeContainer

		.aboutMe{
			width: 50%;
			text-align: center; 
		}
	} // closes aboutMeContainer

} //closes header

section{
	padding: 4%; 
	background-color: @altColor;

	display: flex; 
	justify-content: space-between;

	@media(max-width: 500px){
		flex-direction: column; 
		align-items: center; 
	}

	.leftContainer{
		width: 33%;  
		padding: 2%; 
		background-color: @mainColor;

		.flexColumnBetween; 

		@media(max-width:500px){
			width: 85%; 
		}

		.personal {
			p {
			padding: 4%; 
			} // closes paragraph in personal
		} // closes personal 

		.contact {
			.contactLinks{
				padding: 4%; 
				.flexColumnBetween(); 
	
				a {
					color: black; 
					text-decoration: none;
					padding:2%; 

					&:hover{
						color: @altColor; 
					}
				} // closes a tags in contactLinks
			} // closes contactLinks
		} // closes contact

		.education {

			p{
				padding: 4%; 
			} // closes p in education 
		} // closes education 
	} // closes leftContainer

	.rightContainer{
		// height: 100%; 
		width: 65%;
		padding: 2%; 
		background-color: @mainColor;

		.flexColumnBetween();

		@media(max-width:500px){
			width: 85%; 
		}

		ul{
			margin-left: 8%;
			list-style-position: outside;

			li{
				padding: 2%; 
			}
		} // closes ul in right container

		#work {
			padding: 2% 0; 

			.workContainer{
				padding: 2%; 

				.workDetailContainer{
					padding: 2%; 
				} // closes workDetail
			} // closes workContainer
		} // closes work
	} // closes rightContainer

} // closes section